spring.jersey.type=servlet
server.servlet-path=/s
server.port=8080
management.port=8081

spring.jpa.hibernate.ddl-auto=none

allowAccessControlOriginFrom=http://localhost:9000

# This may be an information disclosure vulnerability
endpoints.health.sensitive=false

#####################################
# Data Pipeline Channel Adapter Settings
#
# These settings will configure your inbound (consumer) or outbound (publisher) channels.
# Be aware that while the connection to Kafka is handled by spring-cloud, the underlying message processing is
# controlled by the spring-integration-kafka project.
#
# By default the Spring Cloud Stream Kafka Binder will expect headers to be present. Setting the mode to raw turns this off.
spring.cloud.stream.binder.kafka.mode=raw
## Kafka Publisher Settings
#
# Producer publishing configuration
producer.fixedDelayMilliseconds=10000
producer.maxMessagesPerPoll=1
#
# Override the publisher's default OUTBOUND channel name for a Kafka topic.
spring.cloud.stream.bindings.kafkaOutputChannel=bar
#  NOTE: while your topic name should ideally be created ahead of time, if the topic does not exist, a new topic with this name will get created when the first message is published.
#
## Kafka Consumer Settings
#
#####################################
# See also org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter
#
# Override the consumer's default INBOUND channel name for a Kafka topic. This might 'constituent' or any previously setup Kafka topic, typically data coming from luminate-online
spring.cloud.stream.bindings.kafkaInputChannel=bar4
#####################################

